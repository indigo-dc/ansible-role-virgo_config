---


# tasks file for virgo_config
- name: install cvmfs repo
  apt: deb=http://ecsft.cern.ch/dist/cvmfs/cvmfs-release/cvmfs-release-latest_all.deb
  tags: virgo_config

- name: Install cvmfs packages
  apt: name={{ item }} state=present update_cache=yes
  with_items:
       - cvmfs
       - cvmfs-config-default
  tags: virgo_config

- name: Creates CVMFS log file
  file: path=/var/log/cvmfs.log state=touch owner=cvmfs group=cvmfs
  tags: virgo_config_cvmfs

- name: Creates CVMFS log cache manager file
  file: path=/var/log/cvmfs.log.cachemgr state=touch owner=cvmfs group=cvmfs
  tags: virgo_config_cvmfs

- name: Create logrotate rule for CVMFS log
  blockinfile:
    dest: /etc/logrotate.d/cvmfs_log
    create: yes
    content: |
      /var/log/cvmfs.log {
        hourly
        missingok
        rotate 28
        notifempty
        copytruncate
        dateformat -%Y%m%d
        dateext
        size 42M
        create 0644 cvmfs cvmfs
      }
  tags: virgo_config

- name: Create logrotate rule for CVMFS log cache manager
  blockinfile:
    dest: /etc/logrotate.d/cvmfs_cachemgr
    create: yes
    content: |
      /var/log/cvmfs.log.cachemgr {
        hourly
        missingok
        rotate 28
        notifempty
        copytruncate
        dateformat -%Y%m%d
        dateext
        size 42M
        create 0644 cvmfs cvmfs
      }
  tags: virgo_config

- name: create/update file /etc/cvmfs/default.local
  blockinfile:
    dest: /etc/cvmfs/default.local
    create: yes
    content: |
      CVMFS_HTTP_PROXY={{ virgo_config_cvmfs_default_http_proxy }}
      CVMFS_REPOSITORIES={{ virgo_config_cvmfs_repositories }}
  when: not {{ virgo_config_cvmfs_repo.repository_name }}
  tags: virgo_config

- name: create/update file /etc/cvmfs/default.local with defined virgo repo
  blockinfile:
    dest: /etc/cvmfs/default.local
    create: yes
    content: |
      CVMFS_HTTP_PROXY={{ virgo_config_cvmfs_default_http_proxy }}
      CVMFS_REPOSITORIES={{ virgo_config_cvmfs_repositories }},{{ virgo_config_cvmfs_repo.repository_name }}
  when: virgo_config_cvmfs_repo.repository_name
  tags: virgo_config_cvmfs_repo

- name: create/update file {{ virgo_config_cvmfs_repo.public_key_path }}
  lineinfile:
    dest: "{{ virgo_config_cvmfs_repo.public_key_path }}"
    create: yes
    line: "{{ item }}"
  with_items:
    - "{{ virgo_config_cvmfs_repo.public_key.split('\n') }}"
  when: virgo_config_cvmfs_repo.repository_name
  tags: virgo_config_cvmfs_repo

- name: create/update file {{ virgo_config_cvmfs_repo.public_key_path }} from URL
  get_url:
    url: "{{ virgo_config_cvmfs_repo.public_key_url }}"
    dest: "{{ virgo_config_cvmfs_repo.public_key_path }}"
    force: yes
  when: virgo_config_cvmfs_repo.repository_name and virgo_config_cvmfs_repo.public_key_url
  tags: virgo_config_cvmfs_repo

- name: set local VIRGO_SERVER_URL variable
  blockinfile:
    dest: /etc/cvmfs/config.d/{{ virgo_config_cvmfs_repo.repository_name }}.conf
    create: yes
    content: |
      CVMFS_SERVER_URL={{ virgo_config_cvmfs_repo.server_url }}
      CVMFS_PUBLIC_KEY={{ virgo_config_cvmfs_repo.public_key_path }}
      CVMFS_HTTP_PROXY={{ virgo_config_cvmfs_default_http_proxy }}
  when: virgo_config_cvmfs_repo.repository_name
  tags: virgo_config_cvmfs_repo

# SV: questa parte non capisco bene a cosa serva...
#- name: set AMS repo
#  blockinfile:
#    dest: /etc/cvmfs/config.d/{{virgo_config_cvmfs_repo.repository_name}}.local
#    create: yes
#    content: |
#      #CVMFS_SERVER_URL="http://cvmfs-stratum-one.cern.ch/opt/@org@"
#      CVMFS_SERVER_URL="http://cvmfs-stratum-one.cern.ch/cvmfs/virgo.test.to.infn.it"
#      CVMFS_HTTP_PROXY={{virgo_config_cvmfs_default_http_proxy}}
#  tags: virgo_config_cvmfs_repo

# SV: questo per ora non serve
#- name: set software cern repo config
#  blockinfile:
#    dest: /etc/cvmfs/config.d/sft.cern.ch.config
#    create: yes
#    content: |
#      CVMFS_SERVER_URL="http://cvmfs-stratum-one.cern.ch/cvmfs/sft.cern.ch"
#      CVMFS_HTTP_PROXY={{virgo_config_cvmfs_default_http_proxy}}
#  tags: virgo_config_cvmfs_repo

- name: wait for virgo squid to be up and running (ansible > 2.1.0.0)
  wait_for:
     host: "{{ virgo_default_squid }}"
     port: "{{ virgo_default_squid_port }}"
     delay: 20
     timeout: 600
  when: ansible_version > "2.1.0.0"
  tags:
    - virgo_config

- name: wait for virgo squid to be up and running using nc
  command: nc -z {{ virgo_default_squid }} {{ virgo_default_squid_port }}
  register: result
  until: result.rc == 0
  delay: 20
  retries: 40
  when: ansible_version <= "2.1.0.0"
  tags:
    - virgo_config

- name: Enable user_allow_other in fuse.conf
  lineinfile: dest=/etc/fuse.conf line="user_allow_other" state=present
  tags: virgo_config

- name: Add cvmfs user to fuse
  user:
    name: cvmfs
    groups: fuse
    append: yes
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '14.04'

- name: Stop autofs
  service: name=autofs state=stopped
  tags: virgo_config

- name: Creates CVMFS local repo
  file: path=/cvmfs/{{ virgo_config_cvmfs_repo.repository_name }} state=directory owner=cvmfs group=cvmfs recurse=yes
  when: virgo_config_cvmfs_repo.repository_name
  tags: virgo_config_cvmfs_repo

# SV: anche questo mi sa che non serve
#- name: Creates AMS repo folder
#  file: path=/cvmfs/ams.cern.ch state=directory owner=cvmfs group=cvmfs recurse=yes
#  tags: ams_config_cvmfs_repo

#- name: Creates software cern repo folder
#  file: path=/cvmfs/sft.cern.ch state=directory owner=cvmfs group=cvmfs recurse=yes
#  tags: ams_config_cvmfs_repo

# Remove cvmfs folder from mlocate check
- name: Remove cvmfs folder from mlocate check
  lineinfile:
      dest: /etc/updatedb.conf
      regexp: '^PRUNEPATHS='
      line: 'PRUNEPATHS="/tmp /var/spool /media /home/.ecryptfs /var/lib/schroot /cvmfs"'

- name: mount CVMFS local repo
  mount:
    # path: "/cvmfs/{{ams_config_cvmfs_repo.repository_name}}"  # Only in ansible >= 2.3
    # dest: "/cvmfs/{{ams_config_cvmfs_repo.repository_name}}"  # for ansible < 2.3
    name: "/cvmfs/{{ virgo_config_cvmfs_repo.repository_name }}"  # Compatible with all ansible (it's an alias)
    src: "{{ virgo_config_cvmfs_repo.repository_name }}"
    fstype: cvmfs
    state: mounted
  register: result
  until: result | success
  retries: 10
  delay: 10
  when: virgo_config_cvmfs_repo.repository_name
  tags: virgo_config_cvmfs_repo

# SV: non ci serve
#- name: mount AMS CVMFS repo
#  mount:
#    # path: "/cvmfs/ams.cern.ch"  # Only in ansible >= 2.3
#    # dest: "/cvmfs/ams.cern.ch"  # for ansible < 2.3
#    name: "/cvmfs/ams.cern.ch"  # Compatible with all ansible (it's an alias)
#    src: "ams.cern.ch"
#    fstype: cvmfs
#    state: mounted
#  register: result
#  until: result | success
#  retries: 10
#  delay: 10
#  tags: ams_config_cvmfs_repo

#- name: mount software cern CVMFS repo
#  mount:
#    # path: "/cvmfs/sft.cern.ch"  # Only in ansible >= 2.3
#    # dest: "/cvmfs/sft.cern.ch"  # for ansible < 2.3
#    name: "/cvmfs/sft.cern.ch"  # Compatible with all ansible (it's an alias)
#    src: "sft.cern.ch"
#    fstype: cvmfs
#    state: mounted
#  register: result
#  until: result | success
#  retries: 10
#  delay: 10
#  tags: ams_config_cvmfs_repo
